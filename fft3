close all;
clc
% wczytywanie danych
x = load('sygnalDtmf.dat');

% parametry sygnalu
fs = 4096;
ts = 1/fs;
% wektor czasu
t = (0 : length(x) - 1) * ts;
% wyswietlanie sygnalu
%plot(t, x);

% ------------------------------------
% miejsce na dodatkowe zmienne 

sounds = ['1','2','3','A';
        '4','5','6','B';
        '7','8','9','C';
        '*','0','#','D'];
tones_up = [1209,1336,1477,1633];
tones_side = [697,770,852,941];

% koniec
% ------------------------------------

% dlugosc okna - prosze dobrac optymalna wartosc
Nw = 2048;
dzwieki = [];
% przesuwajace sie okno o dlugosci Nw
for i = 1 : length(x) - Nw + 1
    % aktualnie rozpatrywany wycinek sygnalu
    curx = x(i : i + Nw - 1);
    % ------------------------------------
    % tutaj powinien sie znalezc kod rozpoznajacy przycisk
    X = fft(curx)/Nw; %proporcjonalne do amplitudy
    N = length(X);
    k = 0:N-1;
    
    ind1 = 0;
    ind2 = 0;
    mods = abs(X);
   
    %up tones
    for i1 = 1:4
        up_tone = tones_up(i1);
        k1 = round(up_tone * ts * Nw);
        wart1 = mods(k1+1);
        if(wart1 > 0.3)
            ind1 = i1;
        end
    end
    
    %side tones
    for i2 = 1:4
        side_tone = tones_side(i2);
        k2 = round(side_tone * ts * Nw);
        wart2 = mods(k2+1);
        if(wart2 > 0.3)
            ind2 = i2;
        end
    end
    
    
    if ind1 ~= 0 && ind2~=0
        dzwiek = sounds(ind1,ind2);
        dzwieki = [dzwieki dzwiek];
        
    end
    % koniec
    % ------------------------------------
end
dzwieki = unique(dzwieki)

